// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.1
// source: proto/translation.proto

package translation

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Translation via https://ai.youdao.com/
type YoudaoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the word to translate
	Q string `protobuf:"bytes,1,opt,name=q,proto3" json:"q,omitempty"`
	// the source language, default is "auto"
	// all supported language: http://ml.mbd.baidu.com/xFjVPZxw1q
	From string `protobuf:"bytes,2,opt,name=from,proto3" json:"from,omitempty"`
	// the destination language, default is "auto"
	// all supported language: http://ml.mbd.baidu.com/xFjVPZxw1q
	To string `protobuf:"bytes,3,opt,name=to,proto3" json:"to,omitempty"`
	// voice of translation, 0 for female, 1 for male, default is 0
	Voice string `protobuf:"bytes,4,opt,name=voice,proto3" json:"voice,omitempty"`
	// strictly use `from` or `to`
	Strict bool `protobuf:"varint,5,opt,name=strict,proto3" json:"strict,omitempty"`
}

func (x *YoudaoRequest) Reset() {
	*x = YoudaoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_translation_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *YoudaoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*YoudaoRequest) ProtoMessage() {}

func (x *YoudaoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_translation_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use YoudaoRequest.ProtoReflect.Descriptor instead.
func (*YoudaoRequest) Descriptor() ([]byte, []int) {
	return file_proto_translation_proto_rawDescGZIP(), []int{0}
}

func (x *YoudaoRequest) GetQ() string {
	if x != nil {
		return x.Q
	}
	return ""
}

func (x *YoudaoRequest) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *YoudaoRequest) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *YoudaoRequest) GetVoice() string {
	if x != nil {
		return x.Voice
	}
	return ""
}

func (x *YoudaoRequest) GetStrict() bool {
	if x != nil {
		return x.Strict
	}
	return false
}

// Translations from internet
type YoudaoWeb struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value []string `protobuf:"bytes,2,rep,name=value,proto3" json:"value,omitempty"`
}

func (x *YoudaoWeb) Reset() {
	*x = YoudaoWeb{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_translation_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *YoudaoWeb) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*YoudaoWeb) ProtoMessage() {}

func (x *YoudaoWeb) ProtoReflect() protoreflect.Message {
	mi := &file_proto_translation_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use YoudaoWeb.ProtoReflect.Descriptor instead.
func (*YoudaoWeb) Descriptor() ([]byte, []int) {
	return file_proto_translation_proto_rawDescGZIP(), []int{1}
}

func (x *YoudaoWeb) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *YoudaoWeb) GetValue() []string {
	if x != nil {
		return x.Value
	}
	return nil
}

// Variant of the word
type YoudaoVariant struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *YoudaoVariant) Reset() {
	*x = YoudaoVariant{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_translation_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *YoudaoVariant) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*YoudaoVariant) ProtoMessage() {}

func (x *YoudaoVariant) ProtoReflect() protoreflect.Message {
	mi := &file_proto_translation_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use YoudaoVariant.ProtoReflect.Descriptor instead.
func (*YoudaoVariant) Descriptor() ([]byte, []int) {
	return file_proto_translation_proto_rawDescGZIP(), []int{2}
}

func (x *YoudaoVariant) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *YoudaoVariant) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

// basic info of translation
type YoudaoBasic struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the level of the word
	ExamType []string `protobuf:"bytes,1,rep,name=exam_type,json=examType,proto3" json:"exam_type,omitempty"`
	// the explains of the word
	Explains []string `protobuf:"bytes,2,rep,name=explains,proto3" json:"explains,omitempty"`
	// the phonetic of the word
	Phonetic string `protobuf:"bytes,3,opt,name=phonetic,proto3" json:"phonetic,omitempty"`
	// the uk phonetic of the word
	UkPhonetic string `protobuf:"bytes,4,opt,name=uk_phonetic,json=ukPhonetic,proto3" json:"uk_phonetic,omitempty"`
	// the uk speech source url of the word
	UkSpeech string `protobuf:"bytes,5,opt,name=uk_speech,json=ukSpeech,proto3" json:"uk_speech,omitempty"`
	// the us phonetic of the word
	UsPhonetic string `protobuf:"bytes,6,opt,name=us_phonetic,json=usPhonetic,proto3" json:"us_phonetic,omitempty"`
	// the us speech source url of the word
	UsSpeech string `protobuf:"bytes,7,opt,name=us_speech,json=usSpeech,proto3" json:"us_speech,omitempty"`
	// the variants of the word
	Variants []*YoudaoVariant `protobuf:"bytes,8,rep,name=variants,proto3" json:"variants,omitempty"`
}

func (x *YoudaoBasic) Reset() {
	*x = YoudaoBasic{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_translation_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *YoudaoBasic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*YoudaoBasic) ProtoMessage() {}

func (x *YoudaoBasic) ProtoReflect() protoreflect.Message {
	mi := &file_proto_translation_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use YoudaoBasic.ProtoReflect.Descriptor instead.
func (*YoudaoBasic) Descriptor() ([]byte, []int) {
	return file_proto_translation_proto_rawDescGZIP(), []int{3}
}

func (x *YoudaoBasic) GetExamType() []string {
	if x != nil {
		return x.ExamType
	}
	return nil
}

func (x *YoudaoBasic) GetExplains() []string {
	if x != nil {
		return x.Explains
	}
	return nil
}

func (x *YoudaoBasic) GetPhonetic() string {
	if x != nil {
		return x.Phonetic
	}
	return ""
}

func (x *YoudaoBasic) GetUkPhonetic() string {
	if x != nil {
		return x.UkPhonetic
	}
	return ""
}

func (x *YoudaoBasic) GetUkSpeech() string {
	if x != nil {
		return x.UkSpeech
	}
	return ""
}

func (x *YoudaoBasic) GetUsPhonetic() string {
	if x != nil {
		return x.UsPhonetic
	}
	return ""
}

func (x *YoudaoBasic) GetUsSpeech() string {
	if x != nil {
		return x.UsSpeech
	}
	return ""
}

func (x *YoudaoBasic) GetVariants() []*YoudaoVariant {
	if x != nil {
		return x.Variants
	}
	return nil
}

type YoudaoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the word to be translated
	Query string `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	// translations of the search word
	Translation []string `protobuf:"bytes,2,rep,name=translation,proto3" json:"translation,omitempty"`
	// reveal the source language and destination language, eg: en2zh-CHS or zh-CHS2en
	Language string `protobuf:"bytes,3,opt,name=language,proto3" json:"language,omitempty"`
	// the speech link of the translation
	TranslationSpeakUrl string `protobuf:"bytes,4,opt,name=translation_speak_url,json=translationSpeakUrl,proto3" json:"translation_speak_url,omitempty"`
	// the speech link of the search word
	QuerySpeakUrl string `protobuf:"bytes,5,opt,name=query_speak_url,json=querySpeakUrl,proto3" json:"query_speak_url,omitempty"`
	// the dictionary link of the translation
	Dict map[string]string `protobuf:"bytes,6,rep,name=dict,proto3" json:"dict,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// the web link of the translation
	WebDict map[string]string `protobuf:"bytes,7,rep,name=web_dict,json=webDict,proto3" json:"web_dict,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// the translations from internet
	Web []*YoudaoWeb `protobuf:"bytes,8,rep,name=web,proto3" json:"web,omitempty"`
	// the basic info of the word
	Basic *YoudaoBasic `protobuf:"bytes,9,opt,name=basic,proto3" json:"basic,omitempty"`
	// whether the search string is a word
	IsWord bool `protobuf:"varint,10,opt,name=is_word,json=isWord,proto3" json:"is_word,omitempty"`
}

func (x *YoudaoResponse) Reset() {
	*x = YoudaoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_translation_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *YoudaoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*YoudaoResponse) ProtoMessage() {}

func (x *YoudaoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_translation_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use YoudaoResponse.ProtoReflect.Descriptor instead.
func (*YoudaoResponse) Descriptor() ([]byte, []int) {
	return file_proto_translation_proto_rawDescGZIP(), []int{4}
}

func (x *YoudaoResponse) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *YoudaoResponse) GetTranslation() []string {
	if x != nil {
		return x.Translation
	}
	return nil
}

func (x *YoudaoResponse) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *YoudaoResponse) GetTranslationSpeakUrl() string {
	if x != nil {
		return x.TranslationSpeakUrl
	}
	return ""
}

func (x *YoudaoResponse) GetQuerySpeakUrl() string {
	if x != nil {
		return x.QuerySpeakUrl
	}
	return ""
}

func (x *YoudaoResponse) GetDict() map[string]string {
	if x != nil {
		return x.Dict
	}
	return nil
}

func (x *YoudaoResponse) GetWebDict() map[string]string {
	if x != nil {
		return x.WebDict
	}
	return nil
}

func (x *YoudaoResponse) GetWeb() []*YoudaoWeb {
	if x != nil {
		return x.Web
	}
	return nil
}

func (x *YoudaoResponse) GetBasic() *YoudaoBasic {
	if x != nil {
		return x.Basic
	}
	return nil
}

func (x *YoudaoResponse) GetIsWord() bool {
	if x != nil {
		return x.IsWord
	}
	return false
}

var File_proto_translation_proto protoreflect.FileDescriptor

var file_proto_translation_proto_rawDesc = []byte{
	0x0a, 0x17, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x6f, 0x0a, 0x0d, 0x59, 0x6f, 0x75, 0x64, 0x61, 0x6f,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0c, 0x0a, 0x01, 0x71, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x01, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x6f, 0x69,
	0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x06, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x22, 0x33, 0x0a, 0x09, 0x59, 0x6f, 0x75, 0x64, 0x61,
	0x6f, 0x57, 0x65, 0x62, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x39, 0x0a, 0x0d,
	0x59, 0x6f, 0x75, 0x64, 0x61, 0x6f, 0x56, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x96, 0x02, 0x0a, 0x0b, 0x59, 0x6f, 0x75, 0x64,
	0x61, 0x6f, 0x42, 0x61, 0x73, 0x69, 0x63, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x78, 0x61, 0x6d, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x65, 0x78, 0x61, 0x6d,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x78, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x65, 0x78, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x73,
	0x12, 0x1a, 0x0a, 0x08, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x74, 0x69, 0x63, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x74, 0x69, 0x63, 0x12, 0x1f, 0x0a, 0x0b,
	0x75, 0x6b, 0x5f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x74, 0x69, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x75, 0x6b, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x74, 0x69, 0x63, 0x12, 0x1b, 0x0a,
	0x09, 0x75, 0x6b, 0x5f, 0x73, 0x70, 0x65, 0x65, 0x63, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x75, 0x6b, 0x53, 0x70, 0x65, 0x65, 0x63, 0x68, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x73,
	0x5f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x74, 0x69, 0x63, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x75, 0x73, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x74, 0x69, 0x63, 0x12, 0x1b, 0x0a, 0x09, 0x75,
	0x73, 0x5f, 0x73, 0x70, 0x65, 0x65, 0x63, 0x68, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x75, 0x73, 0x53, 0x70, 0x65, 0x65, 0x63, 0x68, 0x12, 0x36, 0x0a, 0x08, 0x76, 0x61, 0x72, 0x69,
	0x61, 0x6e, 0x74, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x59, 0x6f, 0x75, 0x64, 0x61, 0x6f, 0x56,
	0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x52, 0x08, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x73,
	0x22, 0xa8, 0x04, 0x0a, 0x0e, 0x59, 0x6f, 0x75, 0x64, 0x61, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x6c,
	0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c,
	0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x32, 0x0a, 0x15, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x70, 0x65, 0x61, 0x6b, 0x5f, 0x75, 0x72, 0x6c,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x53, 0x70, 0x65, 0x61, 0x6b, 0x55, 0x72, 0x6c, 0x12, 0x26, 0x0a, 0x0f, 0x71,
	0x75, 0x65, 0x72, 0x79, 0x5f, 0x73, 0x70, 0x65, 0x61, 0x6b, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x71, 0x75, 0x65, 0x72, 0x79, 0x53, 0x70, 0x65, 0x61, 0x6b,
	0x55, 0x72, 0x6c, 0x12, 0x39, 0x0a, 0x04, 0x64, 0x69, 0x63, 0x74, 0x18, 0x06, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x25, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x59, 0x6f, 0x75, 0x64, 0x61, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44,
	0x69, 0x63, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x64, 0x69, 0x63, 0x74, 0x12, 0x43,
	0x0a, 0x08, 0x77, 0x65, 0x62, 0x5f, 0x64, 0x69, 0x63, 0x74, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x28, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x59,
	0x6f, 0x75, 0x64, 0x61, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x57, 0x65,
	0x62, 0x44, 0x69, 0x63, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x77, 0x65, 0x62, 0x44,
	0x69, 0x63, 0x74, 0x12, 0x28, 0x0a, 0x03, 0x77, 0x65, 0x62, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x59,
	0x6f, 0x75, 0x64, 0x61, 0x6f, 0x57, 0x65, 0x62, 0x52, 0x03, 0x77, 0x65, 0x62, 0x12, 0x2e, 0x0a,
	0x05, 0x62, 0x61, 0x73, 0x69, 0x63, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x59, 0x6f, 0x75, 0x64, 0x61,
	0x6f, 0x42, 0x61, 0x73, 0x69, 0x63, 0x52, 0x05, 0x62, 0x61, 0x73, 0x69, 0x63, 0x12, 0x17, 0x0a,
	0x07, 0x69, 0x73, 0x5f, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06,
	0x69, 0x73, 0x57, 0x6f, 0x72, 0x64, 0x1a, 0x37, 0x0a, 0x09, 0x44, 0x69, 0x63, 0x74, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a,
	0x3a, 0x0a, 0x0c, 0x57, 0x65, 0x62, 0x44, 0x69, 0x63, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x32, 0x52, 0x0a, 0x0b, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x43, 0x0a, 0x06, 0x59, 0x6f,
	0x75, 0x64, 0x61, 0x6f, 0x12, 0x1a, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x59, 0x6f, 0x75, 0x64, 0x61, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1b, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x59,
	0x6f, 0x75, 0x64, 0x61, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42,
	0x15, 0x5a, 0x13, 0x2e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x3b, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_translation_proto_rawDescOnce sync.Once
	file_proto_translation_proto_rawDescData = file_proto_translation_proto_rawDesc
)

func file_proto_translation_proto_rawDescGZIP() []byte {
	file_proto_translation_proto_rawDescOnce.Do(func() {
		file_proto_translation_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_translation_proto_rawDescData)
	})
	return file_proto_translation_proto_rawDescData
}

var file_proto_translation_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_proto_translation_proto_goTypes = []interface{}{
	(*YoudaoRequest)(nil),  // 0: translation.YoudaoRequest
	(*YoudaoWeb)(nil),      // 1: translation.YoudaoWeb
	(*YoudaoVariant)(nil),  // 2: translation.YoudaoVariant
	(*YoudaoBasic)(nil),    // 3: translation.YoudaoBasic
	(*YoudaoResponse)(nil), // 4: translation.YoudaoResponse
	nil,                    // 5: translation.YoudaoResponse.DictEntry
	nil,                    // 6: translation.YoudaoResponse.WebDictEntry
}
var file_proto_translation_proto_depIdxs = []int32{
	2, // 0: translation.YoudaoBasic.variants:type_name -> translation.YoudaoVariant
	5, // 1: translation.YoudaoResponse.dict:type_name -> translation.YoudaoResponse.DictEntry
	6, // 2: translation.YoudaoResponse.web_dict:type_name -> translation.YoudaoResponse.WebDictEntry
	1, // 3: translation.YoudaoResponse.web:type_name -> translation.YoudaoWeb
	3, // 4: translation.YoudaoResponse.basic:type_name -> translation.YoudaoBasic
	0, // 5: translation.Translation.Youdao:input_type -> translation.YoudaoRequest
	4, // 6: translation.Translation.Youdao:output_type -> translation.YoudaoResponse
	6, // [6:7] is the sub-list for method output_type
	5, // [5:6] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_proto_translation_proto_init() }
func file_proto_translation_proto_init() {
	if File_proto_translation_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_translation_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*YoudaoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_translation_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*YoudaoWeb); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_translation_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*YoudaoVariant); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_translation_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*YoudaoBasic); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_translation_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*YoudaoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_translation_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_translation_proto_goTypes,
		DependencyIndexes: file_proto_translation_proto_depIdxs,
		MessageInfos:      file_proto_translation_proto_msgTypes,
	}.Build()
	File_proto_translation_proto = out.File
	file_proto_translation_proto_rawDesc = nil
	file_proto_translation_proto_goTypes = nil
	file_proto_translation_proto_depIdxs = nil
}
